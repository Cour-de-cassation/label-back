apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ label_back_app_id }}-job-{{ job.name }}"
  namespace: "{{ label_kube_namespace }}"
spec:
  schedule: "{{ schedule }}"
  suspend: {{ suspend }}
  successfulJobsHistoryLimit: {{ successful_jobs_history_limit }}
  failedJobsHistoryLimit: {{ failed_jobs_history_limit }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: {{ backoff_limit }}
      parallelism: {{ parallelism }}
      template:
        spec:
          activeDeadlineSeconds: {{ active_deadline_seconds }}
          initContainers:
            - name: "{{ rclone_app_id }}"
              image: rclone/rclone:latest
              command:
                - /bin/sh
              args:
                - -c
                - |
                  rclone -v sync s3:{{ sso_bucket }} /sso-files && \
                  chmod -R 755 /sso-files
              envFrom:
                - secretRef:
                    name: "{{ rclone_app_id }}-secret"
              volumeMounts:
                - name: "{{ rclone_app_id }}-pvc-sso"
                  mountPath: /sso-files
          containers:
            - name: "label-backend-{{ name }}"
              image: "{{ label_backend_image }}"
              volumeMounts:
                - name: "{{ rclone_app_id }}-pvc-sso"
                  mountPath: /home/node/sso-files
              command:
                - /bin/sh
              args:
                - -c
                - node {{ command }} -s settings/settings.json
              envFrom:
                - configMapRef:
                    name: "{{ label_back_app_id }}-config"
                - secretRef:
                    name: "{{ label_back_app_id }}-secret"
          restartPolicy: {{ restartPolicy }}
          volumes:
            - name: "{{ rclone_app_id }}-pvc-sso"
              persistentVolumeClaim:
                claimName: "{{ rclone_app_id }}-pvc-sso"